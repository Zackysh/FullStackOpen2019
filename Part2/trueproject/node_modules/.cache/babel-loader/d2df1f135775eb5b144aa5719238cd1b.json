{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrig\\\\Desktop\\\\VS\\\\FSO\\\\Part2\\\\trueproject\\\\src\\\\components\\\\Countries.js\";\nimport React from 'react';\nimport Countrie from './Countrie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = ({\n  countries\n}) => {\n  let toShow = undefined;\n  if (countries.length < 1) toShow = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There is no matches\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 18\n  }, this);else if (countries.length > 10) toShow = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Too many matches, specify another filter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 18\n  }, this);else toShow = countries.map(countrie => /*#__PURE__*/_jsxDEV(Countrie, {\n    countrie: showCountries()\n  }, countrie.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this));\n  return toShow;\n};\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/adrig/Desktop/VS/FSO/Part2/trueproject/src/components/Countries.js"],"names":["React","Countrie","Countries","countries","toShow","undefined","length","map","countrie","showCountries","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAEjC,MAAIC,MAAM,GAAGC,SAAb;AAEA,MAAIF,SAAS,CAACG,MAAV,GAAmB,CAAvB,EACIF,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT,CADJ,KAEK,IAAID,SAAS,CAACG,MAAV,GAAmB,EAAvB,EACDF,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT,CADC,KAGDA,MAAM,GAAGD,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAC3B,QAAC,QAAD;AAA8B,IAAA,QAAQ,EAAEC,aAAa;AAArD,KAAeD,QAAQ,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA,UADK,CAAT;AAIJ,SAAON,MAAP;AACH,CAdD;;KAAMF,S;AAgBN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport Countrie from './Countrie'\r\n\r\nconst Countries = ({ countries }) => {\r\n\r\n    let toShow = undefined\r\n\r\n    if (countries.length < 1)\r\n        toShow = <p>There is no matches</p>\r\n    else if (countries.length > 10)\r\n        toShow = <p>Too many matches, specify another filter</p>\r\n    else\r\n        toShow = countries.map(countrie =>\r\n            <Countrie key={countrie.name} countrie={showCountries()} />\r\n        )\r\n\r\n    return toShow\r\n}\r\n\r\nexport default Countries"]},"metadata":{},"sourceType":"module"}