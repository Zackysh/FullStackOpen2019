{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrig\\\\Desktop\\\\VS\\\\FSO\\\\Part2\\\\trueproject\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport contactServices from './services/contact';\nimport Contacts from './components/Contacts';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  useEffect(() => {\n    contactServices.getAll().then(response => {\n      setContacts(response);\n    });\n  }, []);\n  const answer = window.confirm(`${newName} already exist, replace the old number with a new one?.`);\n\n  if (answer) {\n    /* if user want to change phone number */\n    const contactToEdit = contacts.find(contact => contact.name === newName);\n    const editedContact = { ...contactToEdit,\n      number: newPhone\n    };\n    contactServices.update(contactToEdit.id, editedContact);\n    setContacts(contacts.map(contact => contact !== contactToEdit ? contact : editedContact));\n    setNewName('');\n    setNewPhone('');\n  }\n\n  const addContact = event => {\n    event.preventDefault();\n\n    if (!newName || !newPhone) {\n      alert('You must fill all fields.');\n    } else if (newPhone.length < 12) alert('Invalid phone number.');else if (contacts.find(person => person.name === newName)) {\n      /* if name is already taken */\n    } else if (contacts.find(person => person.number === newPhone))\n      /* if number is already taken */\n      alert(`${newPhone} already exist, try another.`);else {\n      /* all Ok */\n      const newContact = {\n        name: newName,\n        number: newPhone\n      };\n      contactServices.create(newContact).then(response => {\n        setContacts(contacts.concat(response));\n        setNewName('');\n        setNewPhone('');\n      });\n    }\n  };\n\n  const deleteContact = id => {\n    const contact = contacts.find(contact => contact.id === id);\n\n    if (window.confirm(`Do you want to remove ${contact.name} contact?`)) {\n      contactServices.deleteO(id).then(() => setContacts(contacts.filter(contact => contact.id !== id)));\n    } else alert('Operation cancelled');\n  };\n  /* ------------------ onChange Handlers ------------------- */\n\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    if (event.target.value.length <= 12) {\n      /* 10 cifras y dos guiones */\n      var cleaned = (\"\" + event.target.value).replace(/\\D/g, \"\");\n      let normValue = `${cleaned.substring(0, 3)}${cleaned.length > 3 ? \"-\" : \"\"}${cleaned.substring(3, 6)}${cleaned.length > 6 ? \"-\" : \"\"}${cleaned.substring(6, 11)}`;\n      setNewPhone(normValue);\n    }\n  };\n  /* ------------------ onChange Handlers ------------------- */\n\n  /**\r\n   * This method return an array after aplying a filter to it.\r\n   */\n\n\n  const showContacts = () => {\n    return contacts.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContact,\n      name: {\n        value: newName,\n        onChange: handleNameChange\n      },\n      phone: {\n        value: newPhone,\n        onChange: handlePhoneChange\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contacts, {\n      contacts: showContacts(),\n      onDelete: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"bhY7R6ZwyBbEaXM9GNEcERqu6n8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/adrig/Desktop/VS/FSO/Part2/trueproject/src/App.js"],"names":["React","useState","useEffect","axios","contactServices","Contacts","ContactForm","Filter","App","contacts","setContacts","filter","setFilter","newName","setNewName","newPhone","setNewPhone","getAll","then","response","answer","window","confirm","contactToEdit","find","contact","name","editedContact","number","update","id","map","addContact","event","preventDefault","alert","length","person","newContact","create","concat","deleteContact","deleteO","handleFilterChange","target","value","handleNameChange","handlePhoneChange","cleaned","replace","normValue","substring","showContacts","toLowerCase","includes","onChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport contactServices from './services/contact'\r\n\r\nimport Contacts from './components/Contacts'\r\nimport ContactForm from './components/ContactForm'\r\nimport Filter from './components/Filter'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [contacts, setContacts] = useState([])\r\n  const [filter, setFilter] = useState('')\r\n  const [newName, setNewName] = useState('')\r\n  const [newPhone, setNewPhone] = useState('')\r\n\r\n  useEffect(() => {\r\n    contactServices\r\n      .getAll()\r\n      .then(response => {\r\n        setContacts(response)\r\n      })\r\n  }, [])\r\n\r\n  const answer = window.confirm(`${newName} already exist, replace the old number with a new one?.`);\r\n      if (answer) { /* if user want to change phone number */\r\n        const contactToEdit = contacts.find(contact => contact.name === newName);\r\n        const editedContact = { ...contactToEdit, number: newPhone };\r\n\r\n        contactServices\r\n          .update(contactToEdit.id, editedContact);\r\n\r\n        setContacts(contacts.map(contact => contact !== contactToEdit ? contact : editedContact))\r\n        setNewName('')\r\n        setNewPhone('')\r\n      }\r\n\r\n  const addContact = (event) => {\r\n    event.preventDefault();\r\n    if (!newName || !newPhone) {\r\n      alert('You must fill all fields.')\r\n    } else if (newPhone.length < 12)\r\n      alert('Invalid phone number.')\r\n    else if (contacts.find(person => person.name === newName)) { /* if name is already taken */\r\n      \r\n    } else if (contacts.find(person => person.number === newPhone)) /* if number is already taken */\r\n      alert(`${newPhone} already exist, try another.`)\r\n    else { /* all Ok */\r\n      const newContact = {\r\n        name: newName,\r\n        number: newPhone\r\n      }\r\n\r\n      contactServices\r\n        .create(newContact)\r\n        .then(response => {\r\n          setContacts(contacts.concat(response))\r\n          setNewName('')\r\n          setNewPhone('')\r\n        })\r\n    }\r\n  }\r\n\r\n  const deleteContact = (id) => {\r\n    const contact = contacts.find(contact => contact.id === id)\r\n    if (window.confirm(`Do you want to remove ${contact.name} contact?`)) {\r\n      contactServices.deleteO(id).then(() => setContacts(contacts.filter(contact => contact.id !== id)))\r\n    } else\r\n      alert('Operation cancelled')\r\n  }\r\n\r\n  /* ------------------ onChange Handlers ------------------- */\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const handlePhoneChange = (event) => {\r\n    if (event.target.value.length <= 12) { /* 10 cifras y dos guiones */\r\n      var cleaned = (\"\" + event.target.value).replace(/\\D/g, \"\");\r\n\r\n      let normValue = `${cleaned.substring(0, 3)}${cleaned.length > 3 ? \"-\" : \"\"\r\n        }${cleaned.substring(3, 6)}${cleaned.length > 6 ? \"-\" : \"\"\r\n        }${cleaned.substring(6, 11)}`;\r\n\r\n      setNewPhone(normValue);\r\n    }\r\n  }\r\n  /* ------------------ onChange Handlers ------------------- */\r\n\r\n  /**\r\n   * This method return an array after aplying a filter to it.\r\n   */\r\n  const showContacts = () => {\r\n    return contacts.filter(person =>\r\n      person.name.toLowerCase().includes(filter.toLowerCase()))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Phonebook</h2>\r\n      <h3>Filter</h3>\r\n      <Filter value={filter} onChange={handleFilterChange} />\r\n\r\n      <h3>Add new</h3>\r\n      <ContactForm\r\n        onSubmit={addContact}\r\n        name={{ value: newName, onChange: handleNameChange }}\r\n        phone={{ value: newPhone, onChange: handlePhoneChange }}\r\n      />\r\n\r\n      <h2>Contacts</h2>\r\n      <Contacts contacts={showContacts()} onDelete={deleteContact} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}